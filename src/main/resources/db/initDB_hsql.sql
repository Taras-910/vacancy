DROP TABLE    vote       IF EXISTS;
DROP TABLE    user_roles IF EXISTS;
DROP TABLE    vacancy    IF EXISTS;
DROP TABLE    freshen    IF EXISTS;
DROP TABLE    employer   IF EXISTS;
DROP TABLE    users      IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE users
(
    id    INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name          VARCHAR(255)            NOT NULL,
    email         VARCHAR(255)            NOT NULL,
    password      VARCHAR(255)            NOT NULL,
    registered    TIMESTAMP DEFAULT now() NOT NULL,
    enabled       BOOLEAN   DEFAULT TRUE  NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON USERS (email);

CREATE TABLE user_roles
(
    user_id       INTEGER NOT NULL,
    role          VARCHAR(255),
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);

CREATE TABLE employer
(
    id     INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name           VARCHAR(255) NOT NULL,
    address        VARCHAR(255) NOT NULL,
    site_name      VARCHAR(255)  NOT NULL,
    CONSTRAINT employer_idx UNIQUE (name, address)
);

CREATE TABLE freshen
(
    id     INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    recorded_date  TIMESTAMP    NOT NULL,
    language       VARCHAR(255) NOT NULL,
    workplace      VARCHAR(255) NOT NULL,
    user_id        INTEGER      NOT NULL,
    FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);

CREATE TABLE vacancy
(
    id     INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    title          VARCHAR(255) NOT NULL,
    salary_min     INT          NOT NULL,
    salary_max     INT          NOT NULL,
    link           VARCHAR(255) NOT NULL,
    skills         VARCHAR(255) NOT NULL,
    release_date   TIMESTAMP    NOT NULL,
    employer_id    INTEGER      NOT NULL,
    freshen_id     INTEGER      NOT NULL,
    CONSTRAINT vacancy_idx UNIQUE (title, skills, employer_id),
    FOREIGN KEY (employer_id) REFERENCES EMPLOYER (id) ON DELETE CASCADE,
    FOREIGN KEY (freshen_id) REFERENCES FRESHEN (id) ON DELETE CASCADE
);

CREATE TABLE vote
(
    id     INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    local_date     DATETIME     NOT NULL,
    vacancy_id     INTEGER      NOT NULL,
    user_id        INTEGER      NOT NULL,

    CONSTRAINT votes_idx UNIQUE (vacancy_id, user_id),
    FOREIGN KEY (vacancy_id) REFERENCES VACANCY (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);



